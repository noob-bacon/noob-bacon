-- Gui to Lua
-- Version: 3.2

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local TextButton = Instance.new("TextButton")

-- Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

TextButton.Parent = ScreenGui
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.0613545813, 0, 0.30392158, 0)
TextButton.Size = UDim2.new(0.1593625546, 0, 0.0816993489, 0) -- Doubled size
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "CloseðŸ˜’"
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.TextSize = 14.000

-- Scripts:

local function ADHTQVC_fake_script() -- TextButton.LocalScript 
	local script = Instance.new('LocalScript', TextButton)

	script.Parent.MouseButton1Down:Connect(function()
		if script.Parent.Text == "CloseðŸ˜’" then
			script.Parent.Text = "OpenðŸ˜Ž" -- Change the text.
		else
			script.Parent.Text = "CloseðŸ˜’" -- Change it back.
		end
		-- Simulate F6 key press
		game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.F6, false, game)
	end)
	
end
coroutine.wrap(ADHTQVC_fake_script)()


local DarkraiX = loadstring(game:HttpGet("https://raw.githubusercontent.com/noob-bacon/miqqu/refs/heads/main/Darkrai%20improved%20to%20my%20liking", true))()

local Library = DarkraiX:Window("Darkrai X","","",Enum.KeyCode.F6);

--[[
DarkraiX:Window(
1 = Name Of Your Ui Library (string)
2 = Game Name (You Can Keep This Empty To Get The Current Game Name!) (string)
3 = A Logo If You Have One! (string)
4 = Ui Library Toggle (I'll Not Prefer Touching It) (function)
);
]]

Tab1 = Library:Tab("Main")

--[[
Library:Tab(
1 = Your Tab Name! (string)
)
]]

Tab1:Button("Button",function()
    print("hi")
end)

--[[
Tab1:Button(
1 = Button Name (string)
2 = callback (function)
]]

Tab1:Toggle("Toggle",false,function(value)
print(value)
    end)

--[[
Tab1:Toggle(
1 = name (string)
2 = wether it should be true already or false (bool)
3 = callback (function)
)
]]

Tab1:Slider("Slider",1,100,25,function(value)
        print(value)
    end)

--[[
Tab1:Slider(
1 = Name (string)
2 = Minimum (number)
3 = Maximum (number)
4 = Currently How Much (number)
)
]]

Tab1:Dropdown("Dropdown",{"yo","sus","pro"},function(value)
            print(value)
end)

--[[
Tab1:Dropdown(
1 = Name (string)
2 = Options (table)
)
]]

Tab1:Textbox("Textbox","",true,function(value)
print(value)
end)

--[[
Tab1:Textbox(
1 = Name (string)
2 = Current Text (string)
3 = State (bool)
4 = callback (function)
)
]]


Tab1:Seperator("Seperator")

--[[
Tab1:Seperator(
1 = Name (string)
)
--]]
Tab1:Line()
